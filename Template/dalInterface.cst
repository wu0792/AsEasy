<%@ Template Language="C#" TargetLanguage="Text" %>
<%@ Property Name="Table" Type="TableSchema" DeepLoad="True" Optional="False" Category="Context" Description="" %>
 
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Linq" %>

<% var lowerTableName = Table.Name[0].ToString().ToLower() + Table.Name.Substring(1); %>
 
using System.Collections.Generic;
using System.Data;
using System.Linq;
using Dapper;
using DataStore.Dal.Pager;
using DataStore.Entity;
using DataStore.Pager;

namespace DataStore.Dal
{
    public partial interface I<%= Table.Name%>Service
    {
        void Delete(List<long> idList);

        void Delete(long id);
        
        void Insert(List<<%= Table.Name%>> <%= lowerTableName%>List);
 
        void Insert(<%= Table.Name%> <%= lowerTableName%>);
 
        void Update(List<<%= Table.Name%>> <%= lowerTableName%>List);

        void Update(<%= Table.Name%> <%= lowerTableName%>);

        IEnumerable<<%= Table.Name%>> Get<%= Table.Name%>s();

        IEnumerable<<%= Table.Name%>> Get<%= Table.Name%>s(string where, DynamicParameters parameters);
        
        <%= Table.Name%> GetSingle<%= Table.Name%>(string where, DynamicParameters parameters);

        <%= Table.Name%> Get<%= Table.Name%>ByPk(long id);

        PageDataView<<%= Table.Name%>> GetList(int page, int pageSize = 10);
    }
}